import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Course {
    private String courseCode;
    private String title;
    private String description;
    private int capacity;
    private int enrolledStudents;

    public Course(String courseCode, String title, String description, int capacity) {
        this.courseCode = courseCode;
        this.title = title;
        this.description = description;
        this.capacity = capacity;
        this.enrolledStudents = 0;
    }

    public String getCourseCode() {
        return courseCode;
    }

    public String getTitle() {
        return title;
    }

    public String getDescription() {
        return description;
    }

    public int getCapacity() {
        return capacity;
    }

    public int getEnrolledStudents() {
        return enrolledStudents;
    }

    public boolean enrollStudent() {
        if (enrolledStudents < capacity) {
            enrolledStudents++;
            return true;
        }
        return false;
    }

    public boolean dropStudent() {
        if (enrolledStudents > 0) {
            enrolledStudents--;
            return true;
        }
        return false;
    }

    @Override
    public String toString() {
        return "Course Code: " + courseCode +
                ", Title: " + title +
                ", Description: " + description +
                ", Capacity: " + capacity +
                ", Enrolled: " + enrolledStudents;
    }
}

class Student {
    private String studentId;
    private String name;
    private List<Course> registeredCourses;

    public Student(String studentId, String name) {
        this.studentId = studentId;
        this.name = name;
        this.registeredCourses = new ArrayList<>();
    }

    public String getStudentId() {
        return studentId;
    }

    public String getName() {
        return name;
    }

    public void registerCourse(Course course) {
        if (course.enrollStudent()) {
            registeredCourses.add(course);
            System.out.println(name + " registered for " + course.getTitle());
        } else {
            System.out.println("Unable to register for " + course.getTitle() + ". Course is full.");
        }
    }

    public void dropCourse(Course course) {
        if (registeredCourses.remove(course)) {
            course.dropStudent();
            System.out.println(name + " dropped the course " + course.getTitle());
        } else {
            System.out.println(name + " is not registered for " + course.getTitle());
        }
    }

    public List<Course> getRegisteredCourses() {
        return registeredCourses;
    }
}

public class CourseRegistrationSystem {

    private static List<Course> courses = new ArrayList<>();
    
    static {
        // Sample courses
        courses.add(new Course("CS101", "Introduction to Computer Science", "Basics of computer science.", 30));
        courses.add(new Course("MATH101", "Calculus I", "Introduction to calculus.", 25));
        courses.add(new Course("PHY101", "Physics I", "Introduction to classical mechanics.", 20));
    }

    public static void displayAvailableCourses() {
        System.out.println("\nAvailable Courses:");
        for (Course course : courses) {
            System.out.println(course);
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter Student ID: ");
        String studentId = scanner.nextLine();
        
        System.out.print("Enter Student Name: ");
        String studentName = scanner.nextLine();
        
        Student student = new Student(studentId, studentName);

        while (true) {
            displayAvailableCourses();
            
            System.out.print("\nEnter 'r' to register for a course, 'd' to drop a course, or 'q' to quit: ");
            String action = scanner.nextLine();

            if (action.equalsIgnoreCase("q")) break;

            if (action.equalsIgnoreCase("r")) {
                System.out.print("Enter Course Code to register: ");
                String code = scanner.nextLine();
                for (Course course : courses) {
                    if (course.getCourseCode().equalsIgnoreCase(code)) {
                        student.registerCourse(course);
                        break;
                    }
                }
            } else if (action.equalsIgnoreCase("d")) {
                System.out.print("Enter Course Code to drop: ");
                String code = scanner.nextLine();
                for (Course course : courses) {
                    if (course.getCourseCode().equalsIgnoreCase(code)) {
                        student.dropCourse(course);
                        break;
                    }
                }
            } else {
                System.out.println("Invalid action. Please try again.");
            }
        }

        scanner.close();
        
        // Display final registered courses
        System.out.println("\nFinal Registered Courses for " + student.getName() + ":");
        for (Course registeredCourse : student.getRegisteredCourses()) {
            System.out.println(registeredCourse.getTitle());
        }
        
        System.out.println("Thank you for using the Course Registration System!");
    }
}
